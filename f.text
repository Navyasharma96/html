To avoid inefficient searches, production software for classless routing lookup must avoid the iterative approach.
 Instead, classless routing tables are usually stored in a hierarchical data structure, and searching proceeds down the hierarchy. 
 The most po- pular data structures are variants of a binary trie in which the value of successive bits in the address determine a path from the root downward.
 A binary trie is a tree with paths determined by the data stored. To visualize a binary trie, 
 imagine that a set of 32-bit addresses is written as binary strings and redun- dant suffixes are removed. What remains is a set of prefixes that 
 uniquely identify each item. For example, Figure 10.13 shows a set of seven addresses written in binary and the corresponding unique prefixes.
 <pre>As Figure 10.13 illustrates, the number of bits required to identify an address depends on the values in the set. For example, the first address 
 in the figure can be uniquely identified by three bits because no other addresses begin with 001.
